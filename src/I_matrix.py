from collections import defaultdict
from tqdm import tqdm
import numpy as np
from scipy.sparse import lil_matrix
from helpers import parseSmaliFile

def i_matrix_calc(app):
    """
    returns the api_calls and invokes for an app
    """
    def permute(lst):
        tups = []
        tup = []
        if len(lst) > 1:
            tup = [(lst[i],lst[j]) for i in range(len(lst)) for j in range(i+1, len(lst))]
        tups.extend(tup)
        return tups
    
    api_calls = defaultdict(int)
    invokes = defaultdict(list)
    api_idx = 0
    print('Calculating I Matrix...')
    for file in tqdm(app):
        parsed_file = parseSmaliFile(open(file))
        for method in parsed_file['Methods']:
            for api_call in method['Android API']:
                api = api_call.replace('\n','').split(' ')[-1]
                if api not in api_calls:
                    api_calls[api] = api_idx
                    api_idx += 1
        for method in parsed_file['Methods']:
            for api_call in method['Android API']:
                invoke = api_call.split(',')[0].split('}, ')[0]
                if invoke[-1] != '}': invoke += '}'
                api = api_call.replace('\n','').split(' ')[-1]
                if invoke not in invokes:
                    invokes[invoke] = [api_calls[api]]
                else:
                    if api_calls[api] not in invokes[invoke]:
                        invokes[invoke].append(api_calls[api])
    
    for val in invokes.keys():
        invokes[val] = permute(invokes[val])
    invokes = [item for sublist in list(invokes.values()) for item in sublist]
            
    return api_calls, invokes

# ---------------------------------------------------------------------
# Driver Function
# ---------------------------------------------------------------------

def I_matrix(api_calls, invokes):
    """
    Given everything calculated from i_matrix_calc, create the
    matrix object using numpy's lil_matrix

    :param: api_calls: a dictionary of api calls with their index
    :param: invokes: a list tuples of pairs of apis that have the same package
    """
    i = len(api_calls)
    j = len(api_calls)
    matrix = lil_matrix((i,j), dtype=np.int8)
    for invoke in invokes:
        matrix[invoke] = 1
        matrix[(invoke[1],invoke[0])] = 1
    return matrix