from collections import defaultdict
from tqdm import tqdm
import numpy as np
from scipy.sparse import lil_matrix
from helpers import parseSmaliFile

def p_matrix_calc(app):
    """
    returns the api_calls and packages for an app
    """
    def permute(lst):
        """
        helper function to permute
        """
        tups = []
        tup = []
        if len(lst) > 1:
            tup = [(lst[i],lst[j]) for i in range(len(lst)) for j in range(i+1, len(lst))]
        tups.extend(tup)
        return tups
    
    api_calls = defaultdict(int)
    packages = defaultdict(list)
    api_idx = 0
    print('Calculating P Matrix...')
    for file in tqdm(app):
        parsed_file = parseSmaliFile(open(file))
        for method in parsed_file['Methods']:
            for api_call in method['Android API']:
                api = api_call.replace('\n','').split(' ')[-1]
                if api not in api_calls:
                    api_calls[api] = api_idx
                    api_idx += 1
        for method in parsed_file['Methods']:
            for api_call in method['Android API']:
                package = api_call.split('->')[0].split(' ')[-1]
                api = api_call.replace('\n','').split(' ')[-1]
                if package not in packages:
                    packages[package] = [api_calls[api]]
                else:
                    if api_calls[api] not in packages[package]:
                        packages[package].append(api_calls[api])
    
    for val in packages.keys():
        packages[val] = permute(packages[val])
    packages = [item for sublist in list(packages.values()) for item in sublist]
            
    return api_calls, packages

# ---------------------------------------------------------------------
# Driver Function
# ---------------------------------------------------------------------

def P_matrix(api_calls, packages):
    """
    Given everything calculated from p_matrix_calc, create the
    matrix object using numpy's lil_matrix

    :param: api_calls: a dictionary of api calls with their index
    :param: packages: a list tuples of pairs of apis that have the same package
    """
    i = len(api_calls)
    j = len(api_calls)
    matrix = lil_matrix((i,j), dtype=np.int8)
    for package in packages:
        matrix[package] = 1
        matrix[(package[1],package[0])] = 1
    return matrix